{"version":3,"sources":["Components/Navbar/Navbar.js","Components/StateData/Statedata.js","Components/Country/India/India.js","Components/Country/UAE/UAE.js","Components/World/World.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","src","style","imagestyle","to","Component","height","weight","Statedata","state","stateData","Axios","get","then","response","setState","data","key","Object","keys","this","Accordion","map","index","districts","districtData","total_active","total__confirmed","total_deceased","total_recovered","district_list","x","active","confirmed","deceased","recovered","obj","push","Card","Header","Toggle","as","Button","variant","eventKey","Collapse","Body","scope","district_name","India","indiaData","console","log","alt","data-holder-rendered","cases","todayCases","todayRecovered","deaths","todayDeaths","UAE","uaeData","World","styleimg","country","countryInfo","flag","width","marginLeft","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.46eae550.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm bg-info navbar-dark\">\r\n  <ul className=\"navbar-nav\">\r\n  <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/SARS-CoV-2_without_background.png/220px-SARS-CoV-2_without_background.png\" style={imagestyle}></img>\r\n    <li className=\"nav-item active\">\r\n        <Link className=\"nav-link\" to=\"/\"><h4>COVID 19</h4></Link>\r\n      \r\n    </li>\r\n    <li className=\"nav-item\">\r\n    <Link className=\"nav-link\" to=\"/india\">INDIA</Link>\r\n      {/* <a className=\"nav-link\" href=\"#\">India</a> */}\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      {/* <a className=\"nav-link\" href=\"#\">Uae</a> */}\r\n      <Link className=\"nav-link\" to=\"/uae\">UAE</Link>\r\n    </li>\r\n    <li className=\"nav-item\">\r\n      {/* <a className=\"nav-link\" href=\"#\">World</a> */}\r\n      <Link className=\"nav-link\" to=\"/world\">WORLD</Link>\r\n    </li>\r\n    {/* <li className=\"nav-item\">\r\n      <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n    </li> */}\r\n  </ul>\r\n</nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst imagestyle={\r\n  height:\"40px\",\r\n  weight:\"40px\"\r\n}","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\nimport {Accordion,Card,Button} from 'react-bootstrap';\r\n\r\nexport default class Statedata extends Component {\r\n    state = {\r\n        stateData:{}\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(\"https://api.covid19india.org/state_district_wise.json\").then(response=>{\r\n                           \r\n            // console.log(response.data);\r\n                           this.setState({stateData:response.data})\r\n\r\n\r\n\r\n        });\r\n    }\r\n    render() {\r\n        let key=Object.keys(this.state.stateData);\r\n        return (\r\n            <div>\r\n                {/* ------------------------------------------- */}\r\n                <Accordion>\r\n                {key.map((data,index)=>{\r\n                        let districts=this.state.stateData[data].districtData;\r\n                        let district_keys=Object.keys(districts);\r\n                        let total_active=0;\r\n                        let total__confirmed=0;\r\n                        let total_deceased=0;\r\n                        let total_recovered=0;\r\n                        let district_list=[];\r\n                        for(let x in districts)\r\n                        {\r\n                            total_active+=districts[x].active;\r\n                            total__confirmed+=districts[x].confirmed;\r\n                            total_deceased+=districts[x].deceased;\r\n                            total_recovered+=districts[x].recovered;\r\n                            let obj=districts[x];\r\n                            obj[\"district_name\"]=x;\r\n                            district_list.push(obj)   \r\n                           \r\n                        }\r\n                        // console.log(district_list);\r\n                        return (\r\n                           <div className=\"row\">\r\n                               <div className=\"col-md-12\">\r\n                                    <Card>\r\n                                        <Card.Header className=\"text-left\">\r\n                                        <Accordion.Toggle as={Button} variant=\"badge\" className=\"text-left\" eventKey={index}>\r\n                                          <strong>{data}</strong>    - <kbd className=\"bg-info\">Total Cases:{total__confirmed}</kbd> | <kbd className=\"badge-warning\">Active:{total_active}</kbd> | <kbd className=\"badge-success\"> Recovered:{total_recovered}</kbd> | <kbd className=\"badge-danger\">Death:{total_deceased}</kbd>\r\n                                        </Accordion.Toggle>\r\n                                        </Card.Header>\r\n                                        <Accordion.Collapse eventKey={index}>\r\n                                        <Card.Body><table className=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n    <th scope=\"col\">SI.NO</th>\r\n      <th scope=\"col\">District</th>\r\n      <th scope=\"col\">Confirmed</th>\r\n      <th scope=\"col\">Active</th>\r\n      <th scope=\"col\">Recovered</th>\r\n      <th scope=\"col\">Deaths</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n     { district_list.map((data,index)=>{\r\n          return(<tr>\r\n            <td>{index+1}</td>\r\n          <td>{data.district_name}</td>\r\n            <td>{data.confirmed}</td>\r\n            <td>{data.active}</td>\r\n            <td>{data.recovered}</td>\r\n            <td>{data.deceased}</td>\r\n\r\n          </tr>)\r\n      })}\r\n    {/* <tr>\r\n      <th scope=\"row\">1</th>\r\n      <td>Mark</td>\r\n      <td>Otto</td>\r\n      <td>@mdo</td>\r\n      <td>@mdo</td>\r\n    </tr> */}\r\n  </tbody>\r\n</table></Card.Body>\r\n                                        </Accordion.Collapse>\r\n                                    </Card>\r\n                                \r\n                               </div>\r\n                           </div>\r\n                        )\r\n                })}\r\n \r\n \r\n</Accordion>\r\n                \r\n                {/* -------------------------------------------*/}\r\n             </div>\r\n        )}}\r\n","import React, { Component } from 'react'\r\nimport Statedata from '../../StateData/Statedata'\r\nimport Axios from 'axios'\r\n// import Navbar from '../../Navbar/Navbar'\r\n\r\n\r\nexport default class India extends Component {\r\n    state = {\r\n        indiaData:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(\"https://corona.lmao.ninja/v2/countries/india\").then(response=>{\r\n\r\n        this.setState({\r\n            indiaData: response.data\r\n        });\r\n        console.log(this.state.indiaData)\r\n\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"justify-content-center text-center\">\r\n                <img className=\"rounded\" src=\"https://www.countryflags.io/in/shiny/64.png\" alt=\"india\" data-holder-rendered=\"true\"></img>\r\n               <h4 className=\"text-center text-muted\"> <kbd>INDIA</kbd></h4>\r\n               <div className=\"card p-3\">\r\n                 <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                         <div className=\"badge badge-info\">\r\n                        {/* <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"/> */}\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">TOTAL CASES</h5>\r\n                            <h3>{this.state.indiaData.cases}</h3>\r\n                            <p className=\"card-text\"><kbd>Today:{this.state.indiaData.todayCases}</kbd></p>\r\n                            {/* <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a> */}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                    <div className=\"badge badge-warning\">\r\n                        {/* <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"/> */}\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">ACTIVE CASES</h5>\r\n                            <h3>{this.state.indiaData.active}</h3>\r\n                            <p className=\"card-text text-warning\">{this.state.indiaData.active}</p>\r\n                            {/* <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a> */}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3\">\r\n                         <div className=\"badge badge-success\">\r\n                        {/* <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"/> */}\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">RECOVERED</h5>\r\n        <h3>{this.state.indiaData.recovered}</h3>\r\n                            <p className=\"card-text\"><kbd>Today:{this.state.indiaData.todayRecovered}</kbd></p>\r\n                            {/* <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a> */}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                         <div className=\"badge badge-danger\">\r\n                        {/* <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"/> */}\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">DEATHS</h5>\r\n                            <h3>{this.state.indiaData.deaths}</h3>\r\n                            <p className=\"card-text\"><kbd>Today:{this.state.indiaData.todayDeaths}</kbd></p>\r\n                            {/* <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a> */}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                 </div>\r\n               </div>\r\n       <Statedata/>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\n\r\nexport default class UAE extends Component {\r\n    state = {\r\n        uaeData:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n        Axios.get(\"https://corona.lmao.ninja/v2/countries/uae\").then(response=>{\r\n\r\n            this.setState({\r\n                uaeData: response.data\r\n            });\r\n            // console.log(this.state.indiaData)\r\n    \r\n            })\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n            <div className=\"col-md-12 text-center\">\r\n            <img className=\"rounded\" src=\"https://www.countryflags.io/AE/shiny/64.png\" alt=\"india\" data-holder-rendered=\"true\"></img>\r\n            <h4 className=\"text-center text-muted\"> <kbd>UAE</kbd></h4>\r\n            <div className=\"card p-3\">\r\n                 <div className=\"row\">\r\n                    <div className=\"col-md-3\">\r\n                         <div className=\"badge badge-info\">\r\n                        {/* <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"/> */}\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">TOTAL CASES</h5>\r\n                            <h3>{this.state.uaeData.cases}</h3>\r\n                            <p className=\"card-text\"><kbd>Today:{this.state.uaeData.todayCases}</kbd></p>\r\n                            {/* <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a> */}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                    <div className=\"badge badge-warning\">\r\n                        {/* <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"/> */}\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">ACTIVE CASES</h5>\r\n                            <h3>{this.state.uaeData.active}</h3>\r\n                            <p className=\"card-text text-warning\">{this.state.uaeData.active}</p>\r\n                            {/* <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a> */}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-3\">\r\n                         <div className=\"badge badge-success\">\r\n                        {/* <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"/> */}\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">RECOVERED</h5>\r\n        <h3>{this.state.uaeData.recovered}</h3>\r\n                            <p className=\"card-text\"><kbd>Today:{this.state.uaeData.todayRecovered}</kbd></p>\r\n                            {/* <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a> */}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-3\">\r\n                         <div className=\"badge badge-danger\">\r\n                        {/* <img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\"/> */}\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">DEATHS</h5>\r\n                            <h3>{this.state.uaeData.deaths}</h3>\r\n                            <p className=\"card-text\"><kbd>Today:{this.state.uaeData.todayDeaths}</kbd></p>\r\n                            {/* <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a> */}\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                 </div>\r\n               </div>\r\n\r\n            </div>     \r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Axios from 'axios'\r\n\r\nexport default class World extends Component {\r\n    state={\r\n        data:[]\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        Axios.get(\"https://corona.lmao.ninja/v2/countries\").then(response=>{\r\n            console.log(response.data)\r\n            this.setState({\r\n                data:response.data\r\n            })\r\n\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 text-center\">\r\n                <img className=\"rounded\" src=\"https://cdn.totalcomputersusa.com/butyoudontlooksick.com/uploads/2010/05/world-globe.jpg\" alt=\"india\" style={styleimg} data-holder-rendered=\"true\"></img>\r\n                <h4 className=\"text-center text-muted\"> <kbd>WORLD</kbd></h4>\r\n                <div className=\"card\">\r\n                <table className=\"table table-striped\">\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">SI.NO</th>\r\n      <th scope=\"col\">Country</th>\r\n      <th scope=\"col\"></th>\r\n      <th scope=\"col\">Total Cases</th>\r\n      <th scope=\"col\">Recovered</th>\r\n      <th scope=\"col\">Death</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {this.state.data.map((data,index)=>{\r\n          return (\r\n            <tr>\r\n            <th scope=\"row\">{index+1}</th>\r\n          <td>{data.country}</td>\r\n          <td><img src={data.countryInfo.flag} style={styleimg} alt=\"world\"></img> </td>\r\n            <td>{data.cases}</td>\r\n            <td>{data.recovered}</td>\r\n            <td>{data.deaths}</td>\r\n          </tr>\r\n          )\r\n      })}\r\n  \r\n   \r\n   \r\n  </tbody>\r\n</table>\r\n                    \r\n                </div>\r\n\r\n                </div> \r\n            </div>\r\n       )\r\n    }\r\n   \r\n}\r\n\r\nconst styleimg={\r\n    height:\"65px\",\r\n    width:\"65px\",\r\n    marginLeft:\"10px\"\r\n    \r\n}","import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\n// import 'bootstrap/dist/js/bootstrap.js'\n// import 'jquery';\n// import 'popper.js';\nimport Navbar from './Components/Navbar/Navbar'\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport India from './Components/Country/India/India';\nimport UAE from './Components/Country/UAE/UAE';\nimport World from './Components/World/World';\n\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n         {/* <India/> */}\n        {/* <Navbar /> */}\n        <Router>\n          <Navbar/>\n          <Route exact path=\"/\" component={India}/>\n          <Route exact path=\"/india\" component={India}/>\n          <Route exact path=\"/uae\" component={UAE}/>\n          <Route exact path=\"/world\" component={World}/>\n\n\n        </Router>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}